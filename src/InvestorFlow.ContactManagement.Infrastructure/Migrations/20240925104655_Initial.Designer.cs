// <auto-generated />
using System;
using InvestorFlow.ContactManagement.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvestorFlow.ContactManagement.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240925104655_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvestorFlow.ContactManagement.Infrastructure.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("FundId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.HasIndex("FundId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("InvestorFlow.ContactManagement.Infrastructure.Models.Fund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId");

                    b.ToTable("Funds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExternalId = new Guid("8c315b74-f063-48b0-a479-35763535075c"),
                            Name = "Global Growth Fund"
                        },
                        new
                        {
                            Id = 2,
                            ExternalId = new Guid("9ecb2c37-9a59-44f7-9dc4-fcafa2d79389"),
                            Name = "Emerging Markets Fund"
                        },
                        new
                        {
                            Id = 3,
                            ExternalId = new Guid("6d4e7bf2-dd14-4032-9c72-7eceb0d663a4"),
                            Name = "Small Business Fund"
                        });
                });

            modelBuilder.Entity("InvestorFlow.ContactManagement.Infrastructure.Models.Contact", b =>
                {
                    b.HasOne("InvestorFlow.ContactManagement.Infrastructure.Models.Fund", "Fund")
                        .WithMany("Contacts")
                        .HasForeignKey("FundId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Fund");
                });

            modelBuilder.Entity("InvestorFlow.ContactManagement.Infrastructure.Models.Fund", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
